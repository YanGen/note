过程/问题
1.介绍一个项目

2.数据库 访问量大如何优化
	SQL查询语句优化
		①使用索引，建立索引可以使查询速度得到提升，可以考虑在 where 以及 order by 、group by 涉及列上建立索引
		②尽可能少的，或者说仅仅将需要的数据取出，也就说尽可能的不用SELECT * FROM、或者尽可能的使用limit来减少返回的行数。
	通过主从复制实现读写分离
		主流关系型数据库都提供了主从复制的功能，通过配置两台（或多台）数据库的主从关系，可以将一台数据库服务器的数据更新同步到另一台服务器上。网站可以利用数据库这一功能，实现数据库的读写分离，从而改善数据库的负载压力。一个系统的读操作远远多于写操作，因此写操作发向master，读操作发向slaves进行操作（简单的轮询算法来决定使用哪个slave）。
		利用数据库的读写分离，Web服务器在写数据的时候，访问主数据库（master），主数据库通过主从复制将数据更新同步到从数据库（slave），这样当Web服务器读数据的时候，就可以通过从数据库获得数据。这一方案使得在大量读操作的Web应用可以轻松地读取数据，而主数据库也只会承受少量的写入操作
	数据库分库、分表、分区
		分表
			垂直拆分，在主键和一些列放在一个表中，然后把主键和另外的列放在另一个表中。如果一个表中某些列常用，而另外一些不常用，则可以采用垂直拆分。
			水平拆分，根据一列或者多列数据的值把数据行放到两个独立的表中。
		分库
			根据不同的业务模块划分不同的数据库。
		分区
			分区就是把一张表的数据分成多个区块，这些区块可以在一个磁盘上，也可以在不同的磁盘上，分区后，表面上还是一张表，但是数据散列在多个位置，这样一来，多块硬盘同时处理不同的请求，从而提高磁盘I/O读写性能。实现比较简单，包括水平分区和垂直分区。

3.mybaits
4.为什么用 springboot
	优点：
		①SpringBoot是一个快速开发的框架
			传统的Java项目开发过程大概是先配置大量的XML文件进行框架的整合配置，这个过程开发效率非常低并且可能在会存在冲突问题，我曾经用SSH的做过一个项目可以说深有体会。
		②SpringBoot打包完全采用注解化
			传统的Java项目打包方式是将一个项目打包成一个war包，丢进Tomcat执行，而SpringBoot应用完全可以把项目打包成jar包（就是一个Java应用程序了），再内嵌Http服务器，直接通过命令行执行。
5.spring 特性
	Spring 两大特性是IOC 和 AOP
		①
6.Java 变量可访问权限
	
	访问权限控制： 指的是本类及本类内部的成员（成员变量、成员方法、内部类）对其他类的可见性，即这些内容是否允许其他类访问。

	访问权限	    本类	本包的类	子类	非子类的外包类
	public	    是	  是	     是	    是
	protected	是	  是	     是	    否
	default	    是	  是	     否	    否
	private	    是	  否	     否	    否

	java中default能否修饰类的方法和属性?不能，没有这种写法的，修饰符在不写的时候有默认值，但是default不是修饰符.

7.GET/POST 区别
	GET和POST本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。
	GET - 从指定的资源请求数据；
	POST - 向指定的资源提交要被处理的数据。
	GET数据对所有人可见但POST不会显示在URL中而放在RequestBody里，而正因为这个原因导致GET历史请求数据可见且会遗留（缓存），故安全性要比POST低。
	GET方法的请求数据限制是URL的长度限制，而POST方法没有长度限制。
	GET和POST在编码类型要求和字符类型要求上也有所不同。
	GET和POST在操作浏览器上体现出来的不同是 GET 没有影响而 POST 要再次提交。
	
	对于GET方式的请求，浏览器会把http header和data一并发送出去，服务器响应200（返回数据）； 而对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok（返回数据）。
