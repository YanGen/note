创建对象的方式
	构造器
	反射
		JDK8 Class newInstance():只能调用空参构造器，权限必须是public
		JDK8 以后 Constructor的newInstance(xxx):可以调用空参、带参，权限无要求。
	clone() 不需要构造器，需实现Cloneable接口
	反序列化 从文           件中、网络中获取一个对象的二进制流
	第三方库 Objenesis

创建对象步骤
	1.判断对象对应的类是否加载、链接、初始化
		首先检查字节码指令的指向能否再Metaspace的常量池中定位到一个类的符号引用，再判断相应类元信息是否已被加载、解析和初始化。如果有则使用该类信息进行对象实例，如果没有则在双亲委派机制下加载(加载不到则报 ClassNotFoundException)。
	2.处理对象内存分配的并发问题
		采用CAS失败重试，区域加锁同步内存分配
		每个线程预先分配一块TLAB 通过 -XX:+/-UseTLAB 参数设置是否开启
	3.为对象分配内存
		如果内存规整，根据当前指针位置分配。
		如果内存规整，虚拟机需要维护一个内存标记列表，使用空闲列表发进行分配。
		ps:内存是否规整取决于垃圾收集器。
	4.属性默认初始化
		对所有属性赋默认值 为对象赋值过程的 1
		ps:此处为对象创建，与类创建过程静态变量的初始化不同概念
	5.设置对象对象头
		对象头类型指针、HashCode、GC分代信息、锁信息等
	6.执行 <init> 进行初始化
		为对象赋值过程的 2、3、4

对象属性赋值过程	
	1.属性默认初始化
	2.显式初始化
	3.代码块中初始化
	4.构造器中初始化

Java 顺序打印题
	对象实例初始化顺序
		1、初始化父类中的静态成员变量和静态代码块(ps:两者执行先后根据代码编写的顺序决定，下同)。
		2、初始化子类中的静态成员变量和静态代码块。
		3、初始化父类中的普通成员变量和代码块，在执行父类中的构造方法。
		4、初始化子类中的普通成员变量和代码块，在执行子类中的构造方法。

对象访问两种方式
	句柄访问
	直接指针