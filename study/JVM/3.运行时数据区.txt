1.pc寄存器（每个线程拥有）
	作用：用来存储下一条指令地址，也即 将要执行的指令地址，由执行引擎读取下一条指令。如此一来，jvm内部进行线程切换时就可以在pc寄存器中读取指令的断点，继续执行。

	为什么pc寄存器每条线程一份？
		因为每条线程都需要记录下一条指令地址
		
2.虚拟机栈（每个线程拥有）
	内部保存一个个的栈帧，一个栈帧对应一个Java方法，一个方法的执行对应着一个栈帧的入栈，一个方法执行结束对应着栈帧出栈。
	栈帧主要保存局部变量（8种基本数据类型和对象引用）、部分结果，因存储内容量轻所以不会有垃圾回收的问题（GC）但存在溢出的可能（OOM）。
	生命周期和线程一致。

	通过 -Xss可以调整虚拟机栈初始大小。

	栈帧内部结构：
		1.局部变量表（Local Variables ,简称LV）
			“表”为一维数组，主要存储方法参数和定义在方法体内部的局部变量，局部变量表容量在前期编译时确定。
		2.操作数栈（Operand Stack），或称表达式栈
		3.动态链接（Dunamic Linking），或称指向运行时常量的方法引用
		4.方法返回地址（Return Address），或方法正常、异常退出指向
		5.一些附加信息
		
