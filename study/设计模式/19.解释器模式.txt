解释器模式：
	一个算术表达式通过词法分析器形成词法单元，而后这些词法单元再通过语法分析器构建语法分析树，最终形成一颗抽象的语法分析树。诸如此类的例子也有很多，比如编译器、正则表达式等等。

	给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。

	1) Context: 是环境角色,含有解释器之外的全局信息. 
	2) AbstractExpression: 抽象表达式， 声明一个抽象的解释操作,这个方法为抽象语法树中所有的节点所 共享 
	3) TerminalExpression: 为终结符表达式, 实现与文法中的终结符相关的解释操作 
	4) NonTermialExpression: 为非终结符表达式，为文法中的非终结符实现解释操作. 
	5) 说明： 输入Context he TerminalExpression 信息通过Client 输入即可