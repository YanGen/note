什么是AOP：
	在解释AOP之前必要解释什么是切面，散落在各个业务功能组件前后，而与功能或逻辑无关可以理解为切面，如果不对切面进行管理会造成代码混乱实现繁复，利用Spring的AOP可以有效的解决业务逻辑和横切性问题的分离，从而达到解耦的目的，以提高代码的重用性和开发效率。
AOP应用场景：
	1.日志记录
	2.权限验证
	3.效率检查
	4.事务管理