formData1:
	public Result login(String username, String password)

	var param = {	
	    "username": "admin",	
	    "password": "admin"	
	}	
	$.ajax({	
	    url: "/sys/login",	
	    data: param,	
	    type: "post",	
	    dataType: "json",	
	    success: function(data) {	
	    }	
	});


json1:
	
	public String  byParams (@RequestBody List<String> params)

	params = [];
	params = JSON.stringify(params);
	$.ajax({
	    "type" : "post",
	    "async" : false,
	    "url" : url,
	    "contentType": "application/json",
	      "dataType" : "json",
	       "data" : params,
	       "success" : function(res) {}
	});	


json2
	@PostMapping("/register")	
	public Result register(@RequestBody SysUser user)
	var param = {	
	    "username": "admin",	
	    "password": "admin"	
	}	
	param = JSON.stringify(param);	
	$.ajax({	
	    url: "/sys/multiParameter",	
	    data: param,	
	    type: "post",	
	    contentType: "application/json",	
	    dataType: "json",	
	    success: function(data) {	
	    }	
	});

如果再碰到 会继续记录


---------------------------------
允许跨域
@Configuration
public class CorsConfig {
    private CorsConfiguration buildConfig() {
        CorsConfiguration corsConfiguration = new CorsConfiguration();
        corsConfiguration.addAllowedOrigin("*"); // 1 设置访问源地址
        corsConfiguration.addAllowedHeader("*"); // 2 设置访问源请求头
        corsConfiguration.addAllowedMethod("*"); // 3 设置访问源请求方法
        return corsConfiguration;
    }
 
    @Bean
    public CorsFilter corsFilter() {
        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
        source.registerCorsConfiguration("/**", buildConfig()); // 4 对接口配置跨域设置
        return new CorsFilter(source);
    }
}