mysql主从复制（一主一从）
	MySQL之间数据复制的基础是二进制日志文件（binary log file）。一台MySQL数据库一旦启用二进制日志后，其作为master，它的数据库中所有操作都会以“事件”的方式记录在二进制日志中，其他数据库作为slave通过一个I/O线程与主服务器保持通信，并监控master的二进制日志文件的变化，如果发现master二进制日志文件发生变化，则会把变化复制到自己的中继日志中，然后slave的一个SQL线程会把相关的“事件”执行到自己的数据库中，以此实现从数据库和主数据库的一致性，也就实现了主从复制。
实现MySQL主从复制需要进行的配置：
	主服务器：
		开启二进制日志
		配置唯一的server-id
		获得master二进制日志文件名及位置
		创建一个用于slave和master通信的用户账号
	从服务器：
		配置唯一的server-id
		使用master分配的用户账号读取master二进制日志
		启用slave服务
配置实施过程：

	一、主服务器master修改：
		1.修改mysql配置
			找到主数据库的配置文件my.cnf(或者my.ini)，我的在/etc/mysql/my.cnf,在[mysqld]部分插入如下两行：
			[mysqld]
			# 开启二进制日志
			log-bin=mysql-bin
			# 设置server-id
			server-id=1
		2.重启mysql，创建用于同步的用户账号
			创建用户并授权：用户：cisco 密码：cisco@123
			# 创建用户
			mysql> CREATE USER cisco@10.100.141.117 IDENTIFIED BY 'cisco@123';
			# 分配权限
			mysql> GRANT REPLICATION SLAVE ON . TO cisco@10.100.141.117;
			# 刷新权限
			mysql>FLUSH PRIVILEGES;
		3.查看master状态，记录二进制文件名(mysql-bin.000001)和位置(649)：
			SHOW MASTER STATUS;
	二、从服务器slave修改：
		1.修改mysql配置
			同样找到my.cnf配置文件，添加server-id
			[mysqld]
			# 设置server-id，必须唯一
			server-id=2
		2.重启mysql，打开mysql会话，执行同步SQL语句(需要主服务器主机名，登陆凭据，二进制文件的名称和位置)：
			mysql> CHANGE MASTER TO
			-> MASTER_HOST='10.100.141.135',
			-> MASTER_USER='cisco',
			-> MASTER_PASSWORD='cisco@123',
			-> MASTER_LOG_FILE='mysql-bin.000001',
			-> MASTER_LOG_POS=649;
		3.启动slave同步进程：
			mysql>start slave;
		4.查看slave状态：
			SHOW SLAVE STATUS\G;

		当Slave_IO_Running和Slave_SQL_Running都为YES的时候就表示主从同步设置成功了。接下来就可以进行一些验证了，比如在主master数据库的test数据库的一张表中插入一条数据，在slave的test库的相同数据表中查看是否有新增的数据即可验证主从复制功能是否有效，还可以关闭slave（mysql>stop slave;）,然后再修改master，看slave是否也相应修改（停止slave后，master的修改不会同步到slave），就可以完成主从复制功能的验证了。

	三、验证：
		主数据库建立数据库，删除数据库，插入数据表，备数据库是否即时同步

		还可以用到的其他相关参数：
		master开启二进制日志后默认记录所有库所有表的操作，可以通过配置来指定只记录指定的数据库甚至指定的表的操作，具体在mysql配置文件的[mysqld]可添加修改如下选项：
		#不同步哪些数据库
		binlog-ignore-db = mysql
		binlog-ignore-db = test
		binlog-ignore-db = information_schema

		#只同步哪些数据库，除此之外，其他不同步
		binlog-do-db = game